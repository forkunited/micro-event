context rulesTlinkTypeTransitive = TLinkType(initScript="/tlinkType/rules/Transitive.ctx", initOnce="true");
context rulesTlinkTypeConverse = TLinkType(initScript="/tlinkType/rules/Converse.ctx", initOnce="true");
context modelsEventTLinkDet = TLinkType(initScript="/tlinkEvent/methods/Deterministic_TBD.ctx", initOnce="true", initOverrideByName="true");
context modelsEventTLinkYadll = TLinkType(initScript="/tlinkEvent/methods/YADLL_LR_CAEVO_Simple.ctx", initOnce="true", initOverrideByName="true");
context modelsEventTimeTLinkDet = TLinkType(initScript="/tlinkEventTime/methods/Deterministic_TBD.ctx", initOnce="true", initOverrideByName="true");
context modelsEventTimeTLinkYadll = TLinkType(initScript="/tlinkEventTime/methods/YADLL_LR_CAEVO_Simple.ctx", initOnce="true", initOverrideByName="true");
context modelsTimeTLinkDet = TLinkType(initScript="/tlinkTime/methods/Deterministic_TBD.ctx", initOnce="true", initOverrideByName="true");
context modelsTimeTLinkYadll = TLinkType(initScript="/tlinkTime/methods/YADLL_LR_CAEVO_Simple.ctx", initOnce="true", initOverrideByName="true");
context evalEventTLinkDet = TLinkType(initScript="/tlinkEvent/evaluations/Deterministic_TBD.ctx", initOnce="true", initOverrideByName="true");
context evalEventTLinkYadll = TLinkType(initScript="/tlinkEvent/evaluations/YADLL.ctx", initOnce="true", initOverrideByName="true");
context evalEventTimeTLinkDet = TLinkType(initScript="/tlinkEventTime/evaluations/Deterministic_TBD.ctx", initOnce="true", initOverrideByName="true");
context evalEventTimeTLinkYadll = TLinkType(initScript="/tlinkEventTime/evaluations/YADLL.ctx", initOnce="true", initOverrideByName="true");
context evalTimeTLinkDet = TLinkType(initScript="/tlinkTime/evaluations/Deterministic_TBD.ctx", initOnce="true", initOverrideByName="true");
context evalTimeTLinkYadll = TLinkType(initScript="/tlinkTime/evaluations/YADLL.ctx", initOnce="true", initOverrideByName="true");
context trainDevTestDataEventTLink = EventTLink(initScript="/tlinkEvent/data/LoadTrainDevTest.ctx", initOnce="true", initOverrideByName="true");
context trainDevTestDataEventTimeTLink = EventTimeTLink(initScript="/tlinkEventTime/data/LoadTrainDevTest.ctx", initOnce="true", initOverrideByName="true");
context trainDevTestDataTimeTLink = TimeTLink(initScript="/tlinkTime/data/LoadTrainDevTest.ctx", initOnce="true", initOverrideByName="true");

structure_fn graphPaths2 = GraphPaths(length="2", ignoreTypes=("VAGUE"));
structure_fn graphPaths1 = GraphPaths(length="1", ignoreTypes=("VAGUE"));
structure_fn greedyTlinkTransitiveRules = GreedyStructureRules(rules=(${rulesTlinkTypeTransitive.rules}, ${rulesTlinkTypeConverse.rules}), 
                                                               splitFns=(${graphPaths2}, ${graphPaths1}));

multi_classify_method sieve = Sieve(methods=(${modelsEventTLinkDet.repGov}, ${modelsEventTLinkDet.reichenbach}, 
                                             ${modelsEventTLinkDet.genGov}, ${modelsEventTLinkDet.wordNet},
                                             ${modelsTimeTLinkDet.wordNet}, ${modelsTimeTLinkDet.timeTime},
                                             ${modelsEventTimeTLinkDet.adjET}, ${modelsEventTimeTLinkDet.reportingDCT}, 
                                             ${modelsEventTLinkDet.allVague}, 
                                             ${modelsTimeTLinkDet.allVague},
                                             ${modelsEventTimeTLinkDet.allVague},
                                             ${modelsEventTimeTLinkYadll.yadllWSDCT}, ${modelsEventTLinkYadll.yadllWS}),                                   
                                    structurizers=(${trainDevTestDataEventTLink.docStructConserve}, ${trainDevTestDataEventTLink.docStructConserve},
                                                   ${trainDevTestDataEventTLink.docStructConserve}, ${trainDevTestDataEventTLink.docStructConserve},
                                                   ${trainDevTestDataTimeTLink.docStructConserve}, ${trainDevTestDataTimeTLink.docStructConserve},
                                                   ${trainDevTestDataEventTimeTLink.docStructConserve}, ${trainDevTestDataEventTimeTLink.docStructConserve},
                                                   ${trainDevTestDataEventTLink.docStructConserve}, 
                                                   ${trainDevTestDataTimeTLink.docStructConserve},
                                                   ${trainDevTestDataEventTimeTLink.docStructConserve}, 
                                                   ${trainDevTestDataEventTimeTLink.docStructConserve}, ${trainDevTestDataEventTLink.docStructConserve}),
                                    permutationMeasures=(${evalEventTLinkDet.devRepGovPrecision}, ${evalEventTLinkDet.devReichenbachPrecision},
                                                         ${evalEventTLinkDet.devGenGovPrecision}, ${evalEventTLinkDet.devWordNetPrecision},
                                                         ${evalTimeTLinkDet.devWordNetPrecision}, ${evalTimeTLinkDet.devTimeTimePrecision},
                                                         ${evalEventTimeTLinkDet.devAdjETPrecision}, ${evalEventTimeTLinkDet.devReportingDCTPrecision}, 
                                                         ${evalEventTLinkDet.devAllVaguePrecision}, 
                                                         ${evalTimeTLinkDet.devAllVaguePrecision}, 
                                                         ${evalEventTimeTLinkDet.devAllVaguePrecision}, 
                                                         ${evalEventTimeTLinkYadll.devYadllWSDCTPrecision}, ${evalEventTLinkYadll.devYadllWSPrecision}
                                    ),
                                    structureTransformFn=${greedyTlinkTransitiveRules});
