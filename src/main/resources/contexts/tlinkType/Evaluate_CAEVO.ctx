value maxThreads="30";
value debug=Debug(file="TLinkType_CAEVO.out");
value randomSeed=SetRandomSeed(seed="1");
value cleanFn=BuildCleanFn(name="BagOfWordsCleanFn", fns=("Trim", "RemoveSymbols", "ReplaceNumbers", "UnderscoreToSpace", "Trim", "RemoveLongTokens", "Stem", "SpaceToUnderscore"));

context dataTBD = TLinkType(initScript="/util/init/data/TBD.ctx");
context dataTlinkTypeTBD = TLinkType(initScript="/tlinkType/init/data/TBD.ctx");
context labelsTlinkTypeTBD = TLinkType(initScript="/tlinkType/init/labels/TBD.ctx");

context featuresTlinkType = TLinkType(initScript="/tlinkType/init/Features.ctx");

context modelsTlinkTypeDet = TLinkType(initScript="/tlinkType/init/models/Deterministic_TBD.ctx");
context modelsTlinkTypeYadllLrCTSearch = TLinkType(initScript="/tlinkType/init/models/YADLL_LR_CTSearch_TBD.ctx");

context evalTlinkTypeDet = TLinkType(initScript="/tlinkType/init/evaluations/Deterministic_TBD.ctx");
context evalTlinkTypeYadllLrCTSearch = TLinkType(initScript="/tlinkType/init/evaluations/TLinkType_YADLL_LR_CTSearch_TBD.ctx");

context rulesTlinkTypeTransitive = TLinkType(initScript="/tlinkType/init/rules/Transitive.ctx");
context modelsTlinkTypeCAEVO = TLinkType(initScript="/tlinkType/init/models/CAEVO.ctx");

multi_classify_task multiDevTask = MultiClassification(tasks=(${dataTlinkTypeTBD.devTask}));
multi_classify_task multiTestTask = MultiClassification(tasks=(${dataTlinkTypeTBD.testTask}));

multi_classify_eval multiDevPrecision = Precision(task=${multiDevTask}, method=${modelsTlinkTypeCAEVO.sieve}, mode="MICRO");
multi_classify_eval multiDevRecall = Recall(task=${multiDevTask}, method=${modelsTlinkTypeCAEVO.sieve}, mode="MICRO");
multi_classify_eval multiTestPrecision = Precision(task=${multiTestTask}, method=${modelsTlinkTypeCAEVO.sieve}, mode="MICRO");
multi_classify_eval multiTestRecall = Recall(task=${multiTestTask}, method=${modelsTlinkTypeCAEVO.sieve}, mode="MICRO");

value strEvals = OutputStrings(id="Evaluation_CAEVO", storage="EventString", collection="ExperimentEvaluationOutput", 
                 refs=
                 (
	                 ${multiDevPrecision}, ${multiDevRecall},
	                 ${multiTestPrecision}, ${multiTestRecall}
                 ));
