context trainDevTestDataTlinkType = TLinkType(initScript="/tlinkType/data/LoadTrainDevTest.ctx", initOnce="true", initOverrideByName="true");
context modelsTlinkTypeDet = TLinkType(initScript="/tlinkType/methods/Deterministic_TBD.ctx", initOnce="true", initOverrideByName="true");

classify_eval devAdjETPrecision = Precision(task=${trainDevTestDataTlinkType.devTask}, method=${modelsTlinkTypeDet.adjET}, mode="MICRO");
classify_eval devAdjETRecall = Recall(task=${trainDevTestDataTlinkType.devTask}, method=${modelsTlinkTypeDet.adjET}, mode="MICRO");
classify_eval testAdjETPrecision = Precision(task=${trainDevTestDataTlinkType.testTask}, method=${modelsTlinkTypeDet.adjET}, mode="MICRO");
classify_eval testAdjETRecall = Recall(task=${trainDevTestDataTlinkType.testTask}, method=${modelsTlinkTypeDet.adjET}, mode="MICRO");

classify_eval devGenGovPrecision = Precision(task=${trainDevTestDataTlinkType.devTask}, method=${modelsTlinkTypeDet.genGov}, mode="MICRO");
classify_eval devGenGovRecall = Recall(task=${trainDevTestDataTlinkType.devTask}, method=${modelsTlinkTypeDet.genGov}, mode="MICRO");
classify_eval testGenGovPrecision = Precision(task=${trainDevTestDataTlinkType.testTask}, method=${modelsTlinkTypeDet.genGov}, mode="MICRO");
classify_eval testGenGovRecall = Recall(task=${trainDevTestDataTlinkType.testTask}, method=${modelsTlinkTypeDet.genGov}, mode="MICRO");

classify_eval devReichenbachPrecision = Precision(task=${trainDevTestDataTlinkType.devTask}, method=${modelsTlinkTypeDet.reichenbach}, mode="MICRO");
classify_eval devReichenbachRecall = Recall(task=${trainDevTestDataTlinkType.devTask}, method=${modelsTlinkTypeDet.reichenbach}, mode="MICRO");
classify_eval testReichenbachPrecision = Precision(task=${trainDevTestDataTlinkType.testTask}, method=${modelsTlinkTypeDet.reichenbach}, mode="MICRO");
classify_eval testReichenbachRecall = Recall(task=${trainDevTestDataTlinkType.testTask}, method=${modelsTlinkTypeDet.reichenbach}, mode="MICRO");

classify_eval devRepGovPrecision = Precision(task=${trainDevTestDataTlinkType.devTask}, method=${modelsTlinkTypeDet.repGov}, mode="MICRO");
classify_eval devRepGovRecall = Recall(task=${trainDevTestDataTlinkType.devTask}, method=${modelsTlinkTypeDet.repGov}, mode="MICRO");
classify_eval testRepGovPrecision = Precision(task=${trainDevTestDataTlinkType.testTask}, method=${modelsTlinkTypeDet.repGov}, mode="MICRO");
classify_eval testRepGovRecall = Recall(task=${trainDevTestDataTlinkType.testTask}, method=${modelsTlinkTypeDet.repGov}, mode="MICRO");

classify_eval devTimeTimePrecision = Precision(task=${trainDevTestDataTlinkType.devTask}, method=${modelsTlinkTypeDet.timeTime}, mode="MICRO");
classify_eval devTimeTimeRecall = Recall(task=${trainDevTestDataTlinkType.devTask}, method=${modelsTlinkTypeDet.timeTime}, mode="MICRO");
classify_eval testTimeTimePrecision = Precision(task=${trainDevTestDataTlinkType.testTask}, method=${modelsTlinkTypeDet.timeTime}, mode="MICRO");
classify_eval testTimeTimeRecall = Recall(task=${trainDevTestDataTlinkType.testTask}, method=${modelsTlinkTypeDet.timeTime}, mode="MICRO");

classify_eval devWordNetPrecision = Precision(task=${trainDevTestDataTlinkType.devTask}, method=${modelsTlinkTypeDet.wordNet}, mode="MICRO");
classify_eval devWordNetRecall = Recall(task=${trainDevTestDataTlinkType.devTask}, method=${modelsTlinkTypeDet.wordNet}, mode="MICRO");
classify_eval testWordNetPrecision = Precision(task=${trainDevTestDataTlinkType.testTask}, method=${modelsTlinkTypeDet.wordNet}, mode="MICRO");
classify_eval testWordNetRecall = Recall(task=${trainDevTestDataTlinkType.testTask}, method=${modelsTlinkTypeDet.wordNet}, mode="MICRO");

classify_eval devReportingDCTPrecision = Precision(task=${trainDevTestDataTlinkType.devTask}, method=${modelsTlinkTypeDet.reportingDCT}, mode="MICRO");
classify_eval devReportingDCTRecall = Recall(task=${trainDevTestDataTlinkType.devTask}, method=${modelsTlinkTypeDet.reportingDCT}, mode="MICRO");
classify_eval testReportingDCTPrecision = Precision(task=${trainDevTestDataTlinkType.testTask}, method=${modelsTlinkTypeDet.reportingDCT}, mode="MICRO");
classify_eval testReportingDCTRecall = Recall(task=${trainDevTestDataTlinkType.testTask}, method=${modelsTlinkTypeDet.reportingDCT}, mode="MICRO");

classify_eval devAllVaguePrecision = Precision(task=${trainDevTestDataTlinkType.devTask}, method=${modelsTlinkTypeDet.allVague}, mode="MICRO");
classify_eval devAllVagueRecall = Recall(task=${trainDevTestDataTlinkType.devTask}, method=${modelsTlinkTypeDet.allVague}, mode="MICRO");
classify_eval testAllVaguePrecision = Precision(task=${trainDevTestDataTlinkType.testTask}, method=${modelsTlinkTypeDet.allVague}, mode="MICRO");
classify_eval testAllVagueRecall = Recall(task=${trainDevTestDataTlinkType.testTask}, method=${modelsTlinkTypeDet.allVague}, mode="MICRO");
